<?xml version="1.0"?>
<launch>
  <arg name="robot_model" default="mbzirc2020" />
  <arg name="agent_id" default="1" />
  <arg name="mode" default="real" />

  <arg name="num_frame_filter" default="15"/>

  <group ns="$(arg robot_model)_$(arg agent_id)">
    <node pkg="tf2_ros" type="static_transform_publisher" name="uav_base_to_camera_tf" args="0.30 0 -0.09 0 0 0 $(arg robot_model)_$(arg agent_id)/base_link $(arg robot_model)_$(arg agent_id)/camera_link" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="uav_base_to_thermal_tf" args="0.30 0 -0.14 0 0 0 $(arg robot_model)_$(arg agent_id)/base_link $(arg robot_model)_$(arg agent_id)/thermal_link" />

     <node if="$(eval mode == 'sim')" name="fire_extinguisher" pkg="fire_extinguisher" type="fire_extinguisher.py"/>
     
    <node pkg="circle_detection" type="circle_detection_node" name="circle_detection" output="screen">
      <param name="tf_prefix" value="$(arg robot_model)_$(arg agent_id)" />
      <param name="publish_debug_marker" value="false" />
      <param name="publish_debug_images" value="false" />
      <param name="dp" value="1.0" />
      <param name="min_dist_between_circle_center" value="60" />
      <param name="canny_edge_upper_threshold" value="50" />
      <param name="accumulator_threshold" value="50" />
      <param name="min_radius_meters" value="0.05" />
      <param name="max_radius_meters" value="0.30" />
      <param name="gaussian_blur_sigma" value="4" />
      <param name="use_gaussian_blur" value="true" />
      <param name="max_depth_th" value="6.5" />
    </node>

    <include if="$(eval mode == 'real')" file="$(find realsense2_camera)/launch/rs_rgbd.launch">
      <arg name="tf_prefix"           value="$(arg robot_model)_$(arg agent_id)/camera"/>
      <arg name="enable_pointcloud"   value="false"/>

      <arg name="enable_depth"        value="true"/>
      <arg name="enable_infra1"       value="true"/>
      <arg name="enable_infra2"       value="true"/>

      <arg name="enable_color"        value="true"/>
      <arg name="color_width"         value="640"/>
      <arg name="color_height"        value="480"/>
    </include>

    <node if="$(eval mode == 'real')" pkg="teraranger" type="evo_thermal.py" name="thermal_camera" output="screen" respawn="true">
      <param name="portname" value="/dev/evot33"/>
    </node>

    <node if="$(eval mode == 'real')" pkg="fire_detector" name="fire_detector" type="fire_detector" respawn="true" output="screen">
      <param name="thermal_threshold" value="60"/>
      <param name="angle_amplitude"   value="5"/>
      <param name="camera_config"     value="FORWARD"/>
      <param name="covariance_x"      value="1.5"/>
      <param name="covariance_y"      value="1.5"/>
      <param name="covariance_z"      value="0.5"/>
      <param name="debug_view"        value="false"/>
      <param name="debug_publisher"   value="true"/>
      <param name="uav_id"            type="string"   value="$(arg agent_id)"/>
      <param name="num_frame_filter"  type="int"      value="$(arg num_frame_filter)"/>
    </node>

  </group>
</launch>
