<?xml version="1.0"?>
<launch>

	<arg name="mode" default="real"/>
    <arg name="robot_model" default="mbzirc2020"/>
    <arg name="arena_yaw" default="-0.2968107"/>
	<arg name="existing_wall_tfs" default="false"/>
	<arg name="uav_ids" default='["4","6"]'/>

	<group if="$(eval mode == 'sim')">
        <!-- Launch Gazebo simulation -->
        <rosparam param="/use_sim_time">true</rosparam>
        <include file="$(find challenge_worlds)/launch/challenge2.launch">
            <arg name="arena_yaw" value="$(arg arena_yaw)"/>
        </include>
    </group>

	<node name="c2_dispatcher" pkg="robot_tasks" type="c2_dispatcher_simple.py" respawn="false" output="screen">

		<param name="column_count" value="4"/>
		<rosparam param="uav_ids" subst_value="true">$(arg uav_ids)</rosparam>
		<param name="conf_file" value="$(find mbzirc_launchers)/config/conf_ch2.yaml" />
		<param name="wall_file" value="$(find mbzirc_launchers)/config/uav_wall.txt" />
		<param name="existing_wall_tfs" value="$(arg existing_wall_tfs)"/>
		<param name="init_task" value="1" />
	</node>

	<!-- Use tf *2* to define map to arena, rotating only yaw: args = x y z yaw pitch roll frame_id child_frame_id -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_arena_tf" args="0 0 0 $(arg arena_yaw) 0 0 map arena" />
    
    <node name="estimation_node" pkg="object_estimation" type="estimation_node" respawn="false" output="screen">

		<param name="frequency" value="1.0"/>
		<param name="robot_ns" value="$(arg robot_model)"/>

		<rosparam param="object_types">["pile","wall"]</rosparam>	
		<rosparam param="uav_ids" subst_value="true">$(arg uav_ids)</rosparam>
		<param name="a_priori_info" value="true" />
		<param name="conf_file" value="$(find mbzirc_launchers)/config/conf_ch2.yaml" />
		
		<param name="lost_time_th" value="20.0" />      <!-- in seconds -->
		<rosparam param="association_th">[10.0,4.0]</rosparam>
		<param name="min_update_count" value="5" />
		<param name="delay_max" value="2.0" />          <!-- in seconds -->
				
     </node>

    <node name="simple_regions_manager" pkg="shared_regions_manager" type="simple_regions_manager.py"/>


</launch>
