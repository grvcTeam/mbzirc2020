<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/alex/catkin_ws/src/mbzirc2020/mbzirc_gazebo_simulation/challenge_worlds/worlds/bricktest.world.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<sdf version="1.6" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Properties for every object in the world -->
  <!-- 0 => X position , 1 => Y position , 2 => Z position , 3 => Item yaw -->
  <!-- The following is the geometric expresion for a non-axis rotation -->
  <!-- X'-x= (X-x)*cos(yaw)-(Y-y)*sin(yaw) -->
  <!-- Y'-y= (X-x)*sin(yaw)+(Y-y)*cos(yaw)  -->
  <world name="default">
    <!-- GRIPPER PLUGIN TO AVOID THE NEED OF COLLISIONS -->
    <plugin filename="libgazebo_ros_link_attacher.so" name="ros_link_attacher_plugin"/>
    <include>
      <uri>model://sun</uri>
    </include>
    <model name="arena">
      <static>1</static>
      <link name="link">
        <pose>0.0 0.0 0 0 0 0</pose>
        <collision name="collision">
          <geometry>
            <plane>
              <normal>0 0 1</normal>
              <size>100 100</size>
            </plane>
          </geometry>
          <surface>
            <friction>
              <ode>
                <mu>100</mu>
                <mu2>50</mu2>
              </ode>
              <torsional>
                <ode/>
              </torsional>
            </friction>
            <contact>
              <ode/>
            </contact>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <visual name="visual">
          <cast_shadows>0</cast_shadows>
          <geometry>
            <plane>
              <normal>0 0 1</normal>
              <size>60 50</size>
            </plane>
          </geometry>
          <material>
            <script>
              <uri>file://materials/mbzirc.material</uri>
              <!-- <uri>model://ground_plane_asfalt/materials/scripts</uri>
              <uri>model://ground_plane_asfalt/materials/textures</uri> -->
              <name>mbzirc/Asfalt</name>
            </script>
          </material>
        </visual>
        <self_collide>0</self_collide>
        <kinematic>0</kinematic>
        <gravity>1</gravity>
      </link>
    </model>
    <model name="Red_brick_01">
      <link name="Red_brick_01_link">
        <pose>0 0 0 0 0 0</pose>
        <inertial>
          <mass>1.0</mass>
          <!-- <pose frame=''>0.1 0.15 0.1 0 -0 0</pose> -->
          <inertia>
            <ixx>0.0108333333333</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.00666666666667</iyy>
            <iyz>0</iyz>
            <izz>0.0108333333333</izz>
          </inertia>
        </inertial>
        <visual name="visual">
          <material>
            <script>
              <uri>gazebo.material</uri>
              <name>Gazebo/Red</name>
            </script>
          </material>
          <geometry>
            <!-- <mesh>
                  <uri>model://single_red_brick/meshes/Brick_RibShape_Red_redux.stl</uri>
                  <scale>0.01 0.01 0.01</scale>
                </mesh> -->
            <box>
              <size>0.2 0.3 0.2</size>
            </box>
          </geometry>
        </visual>
        <visual name="visual FM plate">
          <pose>0 0 0.1 0 -0 0</pose>
          <material>
            <script>
              <uri>gazebo.material</uri>
              <name>Gazebo/White</name>
            </script>
          </material>
          <geometry>
            <box>
              <size>0.150 0.200 0.001</size>
            </box>
          </geometry>
        </visual>
        <collision name="collision">
          <geometry>
            <!-- <mesh>
                  <uri>model://single_red_brick/meshes/Brick_RibShape_Red_redux.stl</uri>
                  <scale>0.01 0.01 0.01</scale>
                </mesh> -->
            <box>
              <size>0.200 0.300 0.2</size>
            </box>
          </geometry>
        </collision>
      </link>
    </model>
    <model name="Blue_brick_01">
      <link name="Blue_brick_01_link">
        <pose>2 0 0 0 0 0</pose>
        <inertial>
          <mass>1.5</mass>
          <!-- <pose frame=''>0.1 0.6 0.1 0 -0 0</pose> -->
          <inertia>
            <ixx>0.185</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.01</iyy>
            <iyz>0</iyz>
            <izz>0.185</izz>
          </inertia>
        </inertial>
        <visual name="visual">
          <material>
            <script>
              <uri>gazebo.material</uri>
              <name>Gazebo/Blue</name>
            </script>
          </material>
          <geometry>
            <!-- <mesh>
                        <uri>model://single_blue_brick/meshes/Brick_RibShape_Blue_redux.stl</uri>
                        <scale>0.01 0.01 0.01</scale>
                    </mesh> -->
            <box>
              <size>0.2 1.2 0.2</size>
            </box>
          </geometry>
        </visual>
        <visual name="visual FM plate">
          <pose>0 0 0.1 0 -0 0</pose>
          <material>
            <script>
              <uri>gazebo.material</uri>
              <name>Gazebo/White</name>
            </script>
          </material>
          <geometry>
            <box>
              <size>0.150 0.300 0.001</size>
            </box>
          </geometry>
        </visual>
        <collision name="collision">
          <geometry>
            <!-- <mesh>
                        <uri>model://single_blue_brick/meshes/Brick_RibShape_Blue_redux.stl</uri>
                        <scale>0.01 0.01 0.01</scale>
                   </mesh> -->
            <box>
              <size>0.2 1.2 0.2</size>
            </box>
          </geometry>
        </collision>
      </link>
    </model>
    <model name="Green_brick_01">
      <link name="Green_brick_01_link">
        <pose>1 0 0 0 0 0</pose>
        <inertial>
          <mass>1.0</mass>
          <!-- <pose frame=''>0.1 0.3 0.1 0 -0 0</pose> -->
          <inertia>
            <ixx>0.0333333333333</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.00666666666667</iyy>
            <iyz>0</iyz>
            <izz>0.0333333333333</izz>
          </inertia>
        </inertial>
        <visual name="visual">
          <material>
            <script>
              <uri>gazebo.material</uri>
              <name>Gazebo/Green</name>
            </script>
          </material>
          <geometry>
            <!-- <mesh>
                        <uri>model://single_green_brick/meshes/Brick_RibShape_Green_redux.stl</uri>
                        <scale>0.01 0.01 0.01</scale>
                    </mesh> -->
            <box>
              <size>0.2 0.6 0.2</size>
            </box>
          </geometry>
        </visual>
        <visual name="visual FM plate">
          <pose>0 0 0.1 0 -0 0</pose>
          <material>
            <script>
              <uri>gazebo.material</uri>
              <name>Gazebo/White</name>
            </script>
          </material>
          <geometry>
            <box>
              <size>0.150 0.300 0.001</size>
            </box>
          </geometry>
        </visual>
        <collision name="collision">
          <geometry>
            <!-- <mesh>
                        <uri>model://single_green_brick/meshes/Brick_RibShape_Green_redux.stl</uri>
                        <scale>0.01 0.01 0.01</scale>
                    </mesh> -->
            <box>
              <size>0.2 0.6 0.2</size>
            </box>
          </geometry>
        </collision>
      </link>
    </model>
    <model name="Orange_brick_01">
      <link name="Orange_brick_01_link">
        <pose>3 0 0 0 0 0</pose>
        <inertial>
          <mass>2.0</mass>
          <!-- <pose frame=''>0.1 0.9 0.1 0 -0 0</pose> -->
          <inertia>
            <ixx>0.546666666667</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.0133333333333</iyy>
            <iyz>0</iyz>
            <izz>0.546666666667</izz>
          </inertia>
        </inertial>
        <visual name="visual">
          <material>
            <script>
              <uri>gazebo.material</uri>
              <name>Gazebo/Orange</name>
            </script>
          </material>
          <geometry>
            <!-- <mesh>
                  <uri>model://single_orange_brick/meshes/Brick_RibShape_Orange_redux.stl</uri>
                  <scale>0.01 0.01 0.01</scale>
                </mesh> -->
            <box>
              <size>0.2 1.8 0.2</size>
            </box>
          </geometry>
        </visual>
        <visual name="visual FM plate 1">
          <pose>0 -0.805 0.1 0 -0 0</pose>
          <material>
            <script>
              <uri>gazebo.material</uri>
              <name>Gazebo/White</name>
            </script>
          </material>
          <geometry>
            <!-- <mesh>
                  <uri>model://single_orange_brick/meshes/Brick_RibShape_Orange_redux.stl</uri>
                  <scale>0.01 0.01 0.01</scale>
                </mesh> -->
            <box>
              <size>0.150 0.190 0.001</size>
            </box>
          </geometry>
        </visual>
        <visual name="visual FM plate 2">
          <pose>0 0 0.1 0 -0 0</pose>
          <material>
            <script>
              <uri>gazebo.material</uri>
              <name>Gazebo/White</name>
            </script>
          </material>
          <geometry>
            <box>
              <size>0.150 0.190 0.001</size>
            </box>
          </geometry>
        </visual>
        <visual name="visual FM plate 3">
          <pose>0 0.805 0.1 0 -0 0</pose>
          <material>
            <script>
              <uri>gazebo.material</uri>
              <name>Gazebo/White</name>
            </script>
          </material>
          <geometry>
            <box>
              <size>0.150 0.190 0.001</size>
            </box>
          </geometry>
        </visual>
        <collision name="collision">
          <geometry>
            <!-- <mesh>
                  <uri>model://single_orange_brick/meshes/Brick_RibShape_Orange_redux.stl</uri>
                  <scale>0.01 0.01 0.01</scale>
                </mesh> -->
            <box>
              <size>0.2 1.8 0.2</size>
            </box>
          </geometry>
        </collision>
      </link>
    </model>
    <!-- <model name="kinect_standalone">
     <pose>${pose}</pose> -->
    <model name="kinect">
      <pose>0 0 2 0 1.57 0</pose>
      <link name="link">
        <inertial>
          <mass>0.1</mass>
          <inertia>
            <ixx>1</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>1</iyy>
            <iyz>0</iyz>
            <izz>1</izz>
          </inertia>
        </inertial>
        <collision name="collision">
          <geometry>
            <box>
              <size>0.073 0.276 0.072</size>
            </box>
          </geometry>
          <max_contacts>10</max_contacts>
          <surface>
            <contact>
              <ode/>
            </contact>
            <bounce/>
            <friction>
              <torsional>
                <ode/>
              </torsional>
              <ode/>
            </friction>
          </surface>
        </collision>
        <visual name="visual">
          <geometry>
            <mesh>
              <uri>model://kinect/meshes/kinect.dae</uri>
              <scale>1 1 1</scale>
            </mesh>
          </geometry>
        </visual>
        <sensor name="camera" type="depth">
          <update_rate>20</update_rate>
          <camera name="__default__">
            <horizontal_fov>1.0472</horizontal_fov>
            <image>
              <width>640</width>
              <height>480</height>
              <format>R8G8B8</format>
            </image>
            <clip>
              <near>0.05</near>
              <far>3</far>
            </clip>
          </camera>
          <plugin filename="libgazebo_ros_openni_kinect.so" name="camera_plugin">
            <baseline>0.2</baseline>
            <alwaysOn>1</alwaysOn>
            <updateRate>0.0</updateRate>
            <robotNamespace>KINECT</robotNamespace>
            <cameraName>camera_kinect</cameraName>
            <imageTopicName>depth/image_raw</imageTopicName>
            <cameraInfoTopicName>depth/camera_info</cameraInfoTopicName>
            <depthImageTopicName>depth/depth_image_raw</depthImageTopicName>
            <depthImageInfoTopicName>depth/camera_info_depth</depthImageInfoTopicName>
            <pointCloudTopicName>depth/pointsCloud</pointCloudTopicName>
            <frameName>/uav_1</frameName>
            <!-- <frameName>${namespace}/kinect_${camera_suffix}_link</frameName> -->
            <pointCloudCutoff>0.05</pointCloudCutoff>
            <distortionK1>0</distortionK1>
            <distortionK2>0</distortionK2>
            <distortionK3>0</distortionK3>
            <distortionT1>0</distortionT1>
            <distortionT2>0</distortionT2>
            <CxPrime>0</CxPrime>
            <Cx>0</Cx>
            <Cy>0</Cy>
            <focalLength>0</focalLength>
            <hackBaseline>0</hackBaseline>
          </plugin>
        </sensor>
        <self_collide>0</self_collide>
        <kinematic>0</kinematic>
        <gravity>1</gravity>
      </link>
      <!-- <link name='link_kinect'>
        <inertial>
          <mass>0.1</mass>
          <inertia>
            <ixx>1</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>1</iyy>
            <iyz>0</iyz>
            <izz>1</izz>
          </inertia>
        </inertial>
        <collision name='collision'>
          <geometry>
            <box>
              <size>0.073 0.276 0.072</size>
            </box>
          </geometry>
          <max_contacts>10</max_contacts>
          <surface>
            <contact>
              <ode/>
            </contact>
            <bounce/>
            <friction>
              <torsional>
                <ode/>
              </torsional>
              <ode/>
            </friction>
          </surface>
        </collision>
        <visual name='visual'>
          <geometry>
            <mesh>
              <uri>model://kinect/meshes/kinect.dae</uri>
              <scale>1 1 1</scale>
            </mesh>
          </geometry>
        </visual>
        </link>

      <gazebo reference='link_kinect'>
      <sensor name='camera_kinect' type='depth'>
        <update_rate>20</update_rate>
        <camera name='camera_kinect'>
          <horizontal_fov>1.0472</horizontal_fov>
          <image>
            <width>1280</width>
            <height>720</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.5</near>
            <far>15</far>
          </clip>
        </camera>
        <plugin name='camera_plugin' filename='libgazebo_ros_openni_kinect.so'>
          <baseline>0.2</baseline>
          <alwaysOn>1</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>camera_kinect</cameraName>
          <imageTopicName>depth/image_raw</imageTopicName>
          <cameraInfoTopicName>depth/camera_info</cameraInfoTopicName>
          <depthImageTopicName>depth/depth_image_raw</depthImageTopicName>
          <depthImageInfoTopicName>depth/camera_info_depth</depthImageInfoTopicName>
          <pointCloudTopicName>depth/pointsCloud</pointCloudTopicName>
          <frameName>/link_kinect</frameName>
          <pointCloudCutoff>0.05</pointCloudCutoff>
          <distortionK1>0</distortionK1>
          <distortionK2>0</distortionK2>
          <distortionK3>0</distortionK3>
          <distortionT1>0</distortionT1>
          <distortionT2>0</distortionT2>
          <CxPrime>0</CxPrime>
          <Cx>0</Cx>
          <Cy>0</Cy>
          <focalLength>0</focalLength>
          <hackBaseline>0</hackBaseline>
        </plugin>
      </sensor>
      </gazebo> -->
      <static>1</static>
    </model>
  </world>
</sdf>
