<?xml version="1.0"?>

<robot name="mbzirc2020" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Properties that can be assigned at build time as arguments.
  Is there a reason not to make all properties arguments?
  -->
  <xacro:arg name='robot_id' default='1' />  
  <xacro:arg name='mavlink_addr' default='INADDR_ANY' />
  <xacro:arg name='mavlink_udp_port' default='14560' />
  <xacro:arg name='visual_material' default='DarkGrey' />
  <xacro:arg name='enable_mavlink_interface' default='true' />
  <xacro:arg name='enable_gps_plugin' default='true' />
  <xacro:arg name='gps_noise' default='true' />
  <xacro:arg name='enable_ground_truth' default='false' />
  <xacro:arg name='enable_logging' default='false' />
  <xacro:arg name='challenge' default='2' />

  <!-- macros for gazebo plugins, sensors -->
  <xacro:include filename="$(find robots_description)/urdf/component_snippets.xacro" />

  <!-- Instantiate mbzirc "mechanics" -->
  <xacro:include filename="$(find uavs_description)/models/mbzirc2020/geometry.xacro" />

  <xacro:if value="${$(arg challenge) == 2}">
    <!-- Install magnetic gripper -->
    <xacro:include filename="$(find mbzirc_gazebo_plugins)/urdf/magnetic_gripper.xacro" />
    <xacro:magnetic_gripper parent="base_link" robot_name="mbzirc2020_$(arg robot_id)">
      <origin xyz="0 0 -0.275" rpy="0 0 0" />
    </xacro:magnetic_gripper>
    <!-- Install camera facing down -->
    <xacro:camera_macro 
      namespace="${namespace}"
      parent_link="base_link"
      camera_suffix="0"
      frame_rate="10"
      horizontal_fov="1.07079633"
      image_width="800"
      image_height="600"
      image_format="R8G8B8"
      min_distance="0.01"
      max_distance="100"
      noise_mean="0"
      noise_stddev="0"
      enable_visual="true"
      >
      <box size="0.01 0.01 0.01"/>
      <origin xyz="0 0 -0.295" rpy="0 1.57079632679 0" />
    </xacro:camera_macro>
  </xacro:if>
  
<!-- Install Teraranger Evo frontal -->
  <!-- <xacro:teraranger_macro
    namespace="${model_name}"
    parent_link="base_link"
    teraranger_suffix="0">
  </xacro:teraranger_macro> -->

  <xacro:if value="${$(arg challenge) == 3}">
    <!-- Install fake camera for fire detection -->
    <xacro:include filename="$(find mbzirc_gazebo_plugins)/urdf/fake_camera.xacro" />
    <xacro:fake_camera parent="base_link" robot_name="mbzirc2020_$(arg robot_id)">
      <origin xyz="0.5 0 -0.27" rpy="0 1.57 0" />
    </xacro:fake_camera>

    <!-- Install laser scanner TODO: Move to snippets? -->
    <joint name="laser_joint" type="fixed">
      <axis xyz="0 1 0" />
      <origin xyz="0 0 0.1" rpy="0 0 0"/>
      <parent link="base_link"/>
      <child link="laser_link"/>
    </joint>
    <link name="laser_link">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="0.03" radius="0.04" />
        </geometry>
      </collision>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="0.03" radius="0.04" />
        </geometry>
      </visual>
      <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
    </link>
    <gazebo reference="laser_link">
      <sensor type="gpu_ray" name="laser_sensor">
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>40</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-1.570796</min_angle>
              <max_angle>1.570796</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.10</min>
            <max>30.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <!-- Noise parameters based on published spec for Hokuyo laser
                achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                reading. -->
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="${namespace}_laser_controller" filename="libgazebo_ros_gpu_laser.so">
          <robotNamespace>${namespace}</robotNamespace>
          <topicName>scan</topicName>
          <frameName>laser_link</frameName>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:if>

  <xacro:if value="$(arg enable_gps_plugin)">
    <!-- Instantiate gps plugin. -->
    <xacro:gps_plugin_macro
      namespace="${namespace}"
      gps_noise="$(arg gps_noise)"
      >
    </xacro:gps_plugin_macro>
  </xacro:if>

  <xacro:if value="$(arg enable_mavlink_interface)">
    <!-- Instantiate mavlink telemetry interface. -->
    <xacro:mavlink_interface_macro
      namespace="${namespace}"
      imu_sub_topic="/imu"
      mavlink_addr="$(arg mavlink_addr)"
      mavlink_udp_port="$(arg mavlink_udp_port)"
      >
    </xacro:mavlink_interface_macro>
  </xacro:if>

  <!-- Mount an ADIS16448 IMU. -->
  <xacro:imu_plugin_macro
    namespace="${namespace}"
    imu_suffix=""
    parent_link="base_link"
    imu_topic="/imu"
    mass_imu_sensor="0.015"
    gyroscope_noise_density="0.0003394"
    gyroscopoe_random_walk="0.000038785"
    gyroscope_bias_correlation_time="1000.0"
    gyroscope_turn_on_bias_sigma="0.0087"
    accelerometer_noise_density="0.004"
    accelerometer_random_walk="0.006"
    accelerometer_bias_correlation_time="300.0"
    accelerometer_turn_on_bias_sigma="0.1960"
  >
    <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:imu_plugin_macro>

  <xacro:if value="$(arg enable_ground_truth)">
    <!-- Mount an IMU providing ground truth. -->
    <xacro:imu_plugin_macro
      namespace="${namespace}"
      imu_suffix="gt"
      parent_link="base_link"
      imu_topic="ground_truth/imu"
      mass_imu_sensor="0.00001"
      gyroscope_noise_density="0.0"
      gyroscopoe_random_walk="0.0"
      gyroscope_bias_correlation_time="1000.0"
      gyroscope_turn_on_bias_sigma="0.0"
      accelerometer_noise_density="0.0"
      accelerometer_random_walk="0.0"
      accelerometer_bias_correlation_time="300.0"
      accelerometer_turn_on_bias_sigma="0.0"
    >
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
      <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:imu_plugin_macro>

    <!-- Mount a generic odometry sensor providing ground truth. -->
    <xacro:odometry_plugin_macro
      namespace="${namespace}/ground_truth"
      odometry_sensor_suffix="gt"
      parent_link="base_link"
      pose_topic="pose"
      pose_with_covariance_topic="pose_with_covariance"
      position_topic="position"
      transform_topic="transform"
      odometry_topic="odometry"
      parent_frame_id="world"
      mass_odometry_sensor="0.00001"
      measurement_divisor="1"
      measurement_delay="0"
      unknown_delay="0.0"
      noise_normal_position="0 0 0"
      noise_normal_quaternion="0 0 0"
      noise_normal_linear_velocity="0 0 0"
      noise_normal_angular_velocity="0 0 0"
      noise_uniform_position="0 0 0"
      noise_uniform_quaternion="0 0 0"
      noise_uniform_linear_velocity="0 0 0"
      noise_uniform_angular_velocity="0 0 0"
      enable_odometry_map="false"
      odometry_map=""
      image_scale=""
    >
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" /> <!-- [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] -->
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
    </xacro:odometry_plugin_macro>
  </xacro:if>

  <xacro:if value="$(arg enable_logging)">
    <!-- Instantiate a logger -->
    <xacro:bag_plugin_macro
      namespace="${namespace}"
      bag_file="$(arg log_file)"
      rotor_velocity_slowdown_sim="${rotor_velocity_slowdown_sim}"
    >
    </xacro:bag_plugin_macro>
  </xacro:if>

</robot>
