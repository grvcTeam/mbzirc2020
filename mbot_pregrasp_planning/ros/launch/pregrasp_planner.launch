<?xml version="1.0"?>
<launch>

  <arg name="gui" default="true" />

  <arg name="reference_frame" default="base_link" />

  <arg name="pregrasp_planner_pose_in" default="/mir_manipulation/pregrasp_planner_pipeline/target_pose" />
  
  <!-- iterates over a pose array calling IK moveit service until a valid arm configuration is found -->
  <node pkg="mcr_manipulation_pose_selector" type="reachability_pose_selector_node" name="pregrasp_pipeline_pose_selector" output="screen">
    
    <param name="loop_rate" type="double" value="10.0"/>
    <param name="move_group" type="str" value="move_group"/>
    <param name="arm" type="str" value="manipulator"/>
    <rosparam param="linear_offset">
      - 0.00
      - 0.00
      - 0.00  <!--0.20 for 20 centimeters higher-->
    </rosparam>
    <remap from="~goal_pose_array" to="/mir_manipulation/pregrasp_planner_pipeline/pose_generator/poses_list"/>
    <remap from="~joint_configuration" to="/mir_manipulation/pregrasp_planner_pipeline/configuration_out"/>
    <remap from="~selected_pose" to="/mir_manipulation/pregrasp_planner_pipeline/selected_pose"/>
  </node>

  

  <!-- moveit wrapper to move the arm to a desired arm configuration -->
  <node pkg="mcr_arm_motions" type="planned_motion_node" name="move_arm_planned_motion" output="screen">
    <param name="~loop_rate"  type="double" value="10"/>
    <param name="~move_group"  type="string" value="move_group"/>
    <param name="~arm"  type="string" value="manipulator"/>
    <remap from="~target_configuration" to="/mir_manipulation/pregrasp_planner_pipeline/configuration_out"/>
  </node>

  <node pkg="mbot_moveit_planning_scene" type="mbot_moveit_scene_node" name="mbot_moveit_scene_node" output="screen">
    <param name="~loop_rate" type="double" value="10"/>
  </node>


  <!-- ______________________________________GROUP STARTING________________________________________ -->
  <group ns="mir_manipulation/pregrasp_planner_pipeline"> 

    <!-- transform the pose to the reference frame of the moveit planning interface -->
    <!-- this is useful because typically the pose is comming from perception in odom frame -->
    <node pkg="mcr_manipulation_measurers" type="pose_transformer_node" name="pose_transformer" output="screen">
      <param name="loop_rate" type="double" value="10.0"/>
      <param name="wait_for_transform" type="double" value="0.1"/>
      <param name="target_frame" type="str" value="$(arg reference_frame)"/>
      <param name="trigger" type="boolean" value="false"/>
      <remap from="~pose_in" to="$(arg pregrasp_planner_pose_in)" />
    </node>

    <!-- specify the type of grasp, laying object or standing object to generate the best end effector pose to grasp an object -->
    <node pkg="mir_pregrasp_planning" type="simple_pregrasp_planner_node" name="pregrasp_planner" output="screen">

      <param name="loop_rate" type="double" value="10.0"/>
      
      <param name="min_distance_to_object" type="double" value="0.0"/>
      <param name="max_distance_to_object" type="double" value="0.02"/> 

      <param name="min_azimuth" type="double" value="-10.0"/> 
      <param name="max_azimuth" type="double" value="10.0"/>
      <param name="min_zenith" type="double" value="-10.0"/>
      <param name="max_zenith" type="double" value="10.0"/>
      <param name="min_roll" type="double" value="0.0"/>
      <param name="max_roll" type="double" value="0.0"/> 

      <!-- the tolerance to decide whether an object should be re-oriented,
      based on its height (in meters) -->
      <param name="height_tolerance" type="double" value="0.08"/> <!-- HACK ignored for now, objects are always standing -->
      <!-- Angular tolerance to check if an object is standing up (in degrees) -->
      <param name="angular_tolerance" type="double" value="10.0"/> 

      <remap from="~pose_in" to="pose_transformer/transformed_pose"/>
      <remap from="~grasp_type" to="/mir_manipulation/pregrasp_planner_pipeline/grasp_type"/>
      <rosparam param="linear_offset">
        - 0.00
        - 0.00
        - 0.00
      </rosparam>

    </node>

    <!-- generates a list of poses around a target pose based on a set of parameters -->
    <node pkg="mcr_pose_generation" type="pose_generator_node" name="pose_generator" output="screen">
      <rosparam command="load" file="$(find mbot_pregrasp_planning)/ros/config/gripper_configuration_matrix.yaml" />
      
      <param name="loop_rate"  type="double" value="10.0"/>
      <param name="linear_step" type="double" value="0.01"/>
      <param name="angular_step" type="double" value="10"/>
      <param name="gripper_config_matrix" type="str" value="mbot_left_arm_gripper"/>
      <remap from="~target_pose" to="/mir_manipulation/pregrasp_planner_pipeline/pregrasp_planner/pose_out"/>
      <remap from="~sampling_parameters" to="/mir_manipulation/pregrasp_planner_pipeline/pregrasp_planner/sampling_parameters"/>
    </node>

    <!-- COORDINATOR EVENT based to command/monitor previous pregrasp components -->
    <node pkg="mir_pregrasp_planning" type="pregrasp_planner_pipeline_node" name="coordinator" output="screen">

      <param name="loop_rate" type="double" value="30.0"/>
      <!-- REMAP ROS TOPICS -->
      <remap from="~event_in" to="/mir_manipulation/pregrasp_planner_pipeline/event_in"/>
      <remap from="~event_out" to="/mir_manipulation/pregrasp_planner_pipeline/event_out"/>
      <remap from="~start_pose_transformer" to="pose_transformer/event_in"/>
      <remap from="~start_pregrasp_planner" to="/mir_manipulation/pregrasp_planner_pipeline/pregrasp_planner/event_in"/>
      <remap from="~start_pose_generator" to="/mir_manipulation/pregrasp_planner_pipeline/pose_generator/event_in"/>
      <remap from="~start_pose_selector" to="/pregrasp_pipeline_pose_selector/event_in"/>
      <remap from="~pose_transformer_status" to="pose_transformer/event_out"/>
      <remap from="~pregrasp_planner_status" to="/mir_manipulation/pregrasp_planner_pipeline/pregrasp_planner/event_out"/>
      <remap from="~pose_generator_status" to="/mir_manipulation/pregrasp_planner_pipeline/pose_generator/event_out"/>
      <remap from="~pose_selector_status" to="/pregrasp_pipeline_pose_selector/event_out"/>
    </node>

  </group> 
  <!-- ________________________________________GROUP ENDING_______________________________________________ -->


  <!-- GUI Helper(s) -->
  <group if="$(arg gui)">
    <!-- use gui to publish pose -->
    <include file="$(find mbot_pregrasp_planning)/ros/launch/pose_mock_up_gui.launch">
        <arg name="reference_frame" default="$(arg reference_frame)" />
    </include>
  </group>

</launch>
