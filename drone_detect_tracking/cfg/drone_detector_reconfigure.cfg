#!/usr/bin/env python
PACKAGE = "drone_detector_tracking"

from dynamic_reconfigure.parameter_generator_catkin import *
import roslib
roslib.load_manifest(PACKAGE)

gen = ParameterGenerator()

gen.add("erosion_size", int_t, 0, "Erosion kernel size (px)",   3, 0, 31)

gen.add("unit_depth", double_t, 0, "Depth unit from realsense camera",   0.001, 0.00001, 3.5)
gen.add("min_depth",  double_t, 0, "Min depth (m)",  0.5, 0.0, 70.0)
gen.add("max_depth",  double_t, 0, "Max depth (m)",  20., 0.1, 70.0)
gen.add("step_depth", double_t, 0, "Step depth (m)", 1.0, 0.5, 10.0)

gen.add("min_area", int_t, 0, "Min area (px)",   500, 0, 10000)
gen.add("max_area", int_t, 0, "Max area (px)", 10000, 1, 1000000)

gen.add("min_circularity", double_t, 0, "Min circularity", 0.3, 0.0, 5.0)
gen.add("max_circularity", double_t, 0, "Max circularity", 0.9, 0.0, 10.0)

gen.add("min_convexity", double_t, 0, "Min convexity", 0.75, 0.0, 10.0)
gen.add("max_convexity", double_t, 0, "Max convexity", 1.0,  0.0, 10.0)

gen.add("max_dist_local_detections", int_t, 0, "Max distance between detections in the same frame (px)", 60, 0, 10000)
gen.add("max_dist_detections",       int_t, 0, "Max distance between detections in different frames at same time (px)",   100, 0, 10000)
gen.add("min_group_size",            int_t, 0, "Min consecutive frame detections in order to be considered", 4, 1, 1000000)


gen.add("sigma_xy", double_t, 0, "Std desviation in image plane (m)", 0.3, 0.0, 10.0)
gen.add("sigma_z", double_t, 0, "Std desviation in depth dimension (m)", 0.3,  0.0, 10.0)


exit(gen.generate(PACKAGE, "drone_detector_tracking", "drone_detector_reconfigure"))
